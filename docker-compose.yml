version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: ipsas_postgres
    environment:
      POSTGRES_DB: ipsas_financial
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ipsas_network
    restart: unless-stopped

  # Redis for Celery and caching
  redis:
    image: redis:6-alpine
    container_name: ipsas_redis
    ports:
      - "6379:6379"
    networks:
      - ipsas_network
    restart: unless-stopped

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ipsas_backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - backend_static:/app/staticfiles
      - backend_media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - ipsas_network
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              gunicorn ipsas_financial.wsgi:application --bind 0.0.0.0:8000"

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ipsas_celery_worker
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - ipsas_network
    restart: unless-stopped
    command: celery -A ipsas_financial worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ipsas_celery_beat
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - ipsas_network
    restart: unless-stopped
    command: celery -A ipsas_financial beat --loglevel=info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ipsas_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ipsas_network
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ipsas_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - ipsas_network
    restart: unless-stopped

volumes:
  postgres_data:
  backend_static:
  backend_media:

networks:
  ipsas_network:
    driver: bridge
